"""add deduction type, employee & salary deduction table

Revision ID: 5802979f6182
Revises: 96ef1b62248a
Create Date: 2025-09-17 17:23:04.264547

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5802979f6182'
down_revision: Union[str, None] = '96ef1b62248a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('deduction_types',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_auto_calculated', sa.Boolean(), nullable=True),
    sa.Column('default_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_deduction_types')),
    sa.UniqueConstraint('name', name=op.f('uq_deduction_types_name'))
    )
    op.create_index(op.f('ix_deduction_types_id'), 'deduction_types', ['id'], unique=False)
    op.create_table('employee_deductions',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('deduction_type_id', sa.Integer(), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('paid_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('remaining_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('monthly_deduction_limit', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('effective_from', sa.Date(), nullable=False),
    sa.Column('effective_to', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'COMPLETED', 'SUSPENDED', 'CANCELLED', name='deductionstatus'), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['deduction_type_id'], ['deduction_types.id'], name=op.f('fk_employee_deductions_deduction_type_id_deduction_types')),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name=op.f('fk_employee_deductions_employee_id_employees')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_employee_deductions'))
    )
    op.create_index(op.f('ix_employee_deductions_id'), 'employee_deductions', ['id'], unique=False)
    op.create_table('salary_deductions',
    sa.Column('salary_id', sa.Integer(), nullable=False),
    sa.Column('employee_deduction_id', sa.Integer(), nullable=False),
    sa.Column('deduction_type_id', sa.Integer(), nullable=False),
    sa.Column('deducted_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('salary_month', sa.Date(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['deduction_type_id'], ['deduction_types.id'], name=op.f('fk_salary_deductions_deduction_type_id_deduction_types')),
    sa.ForeignKeyConstraint(['employee_deduction_id'], ['employee_deductions.id'], name=op.f('fk_salary_deductions_employee_deduction_id_employee_deductions')),
    sa.ForeignKeyConstraint(['salary_id'], ['salaries.id'], name=op.f('fk_salary_deductions_salary_id_salaries')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_salary_deductions'))
    )
    op.create_index(op.f('ix_salary_deductions_id'), 'salary_deductions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_salary_deductions_id'), table_name='salary_deductions')
    op.drop_table('salary_deductions')
    op.drop_index(op.f('ix_employee_deductions_id'), table_name='employee_deductions')
    op.drop_table('employee_deductions')
    op.drop_index(op.f('ix_deduction_types_id'), table_name='deduction_types')
    op.drop_table('deduction_types')
    # ### end Alembic commands ###
