"""All business model design

Revision ID: e5be888ddc06
Revises: 4e96192ce2ac
Create Date: 2025-08-14 11:53:13.781778

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e5be888ddc06'
down_revision: Union[str, None] = '4e96192ce2ac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_interactions',
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('interaction_type', sa.String(length=50), nullable=False),
    sa.Column('user_input', sa.Text(), nullable=False),
    sa.Column('processed_input', sa.Text(), nullable=True),
    sa.Column('ai_response', sa.Text(), nullable=False),
    sa.Column('intent', sa.String(length=100), nullable=True),
    sa.Column('entities', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('action_taken', sa.String(length=100), nullable=True),
    sa.Column('reference_type', sa.String(length=50), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_interactions'))
    )
    op.create_index(op.f('ix_ai_interactions_id'), 'ai_interactions', ['id'], unique=False)
    op.create_table('alerts',
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('is_resolved', sa.Boolean(), nullable=True),
    sa.Column('assigned_to', sa.Integer(), nullable=True),
    sa.Column('resolved_by', sa.Integer(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_alerts'))
    )
    op.create_index(op.f('ix_alerts_id'), 'alerts', ['id'], unique=False)
    op.create_table('automation_rules',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('rule_type', sa.String(length=50), nullable=False),
    sa.Column('trigger_condition', sa.JSON(), nullable=False),
    sa.Column('action_config', sa.JSON(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_executed', sa.DateTime(timezone=True), nullable=True),
    sa.Column('execution_count', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_automation_rules'))
    )
    op.create_index(op.f('ix_automation_rules_id'), 'automation_rules', ['id'], unique=False)
    op.create_table('categories',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['categories.id'], name=op.f('fk_categories_parent_id_categories')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categories')),
    sa.UniqueConstraint('name', name=op.f('uq_categories_name'))
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_table('departments',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_departments')),
    sa.UniqueConstraint('name', name=op.f('uq_departments_name'))
    )
    op.create_index(op.f('ix_departments_id'), 'departments', ['id'], unique=False)
    op.create_table('email_logs',
    sa.Column('recipient_email', sa.String(length=255), nullable=False),
    sa.Column('recipient_name', sa.String(length=100), nullable=True),
    sa.Column('subject', sa.String(length=500), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('email_type', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('reference_type', sa.String(length=50), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_email_logs'))
    )
    op.create_index(op.f('ix_email_logs_id'), 'email_logs', ['id'], unique=False)
    op.create_table('file_uploads',
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.Column('entity_type', sa.String(length=50), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_file_uploads'))
    )
    op.create_index(op.f('ix_file_uploads_id'), 'file_uploads', ['id'], unique=False)
    op.create_table('holidays',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_holidays'))
    )
    op.create_index(op.f('ix_holidays_id'), 'holidays', ['id'], unique=False)
    op.create_table('locations',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('location_type', sa.Enum('BRANCH', 'WAREHOUSE', name='location_type'), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_locations'))
    )
    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=False)
    op.create_table('notification_queue',
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('recipient_email', sa.String(length=255), nullable=True),
    sa.Column('recipient_phone', sa.String(length=20), nullable=True),
    sa.Column('subject', sa.String(length=500), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('template_name', sa.String(length=100), nullable=True),
    sa.Column('template_data', sa.JSON(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('scheduled_for', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('reference_type', sa.String(length=50), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notification_queue'))
    )
    op.create_index(op.f('ix_notification_queue_id'), 'notification_queue', ['id'], unique=False)
    op.create_table('performance_metrics',
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('metric_value', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('target_value', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('variance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('variance_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('calculated_by', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_performance_metrics'))
    )
    op.create_index(op.f('ix_performance_metrics_id'), 'performance_metrics', ['id'], unique=False)
    op.create_table('qr_codes',
    sa.Column('qr_code', sa.String(length=255), nullable=False),
    sa.Column('qr_code_image', sa.String(length=500), nullable=True),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('data_payload', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_qr_codes')),
    sa.UniqueConstraint('qr_code', name=op.f('uq_qr_codes_qr_code'))
    )
    op.create_index(op.f('ix_qr_codes_id'), 'qr_codes', ['id'], unique=False)
    op.create_table('shift_types',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('break_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('late_grace_minutes', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_shift_types')),
    sa.UniqueConstraint('name', name=op.f('uq_shift_types_name'))
    )
    op.create_index(op.f('ix_shift_types_id'), 'shift_types', ['id'], unique=False)
    op.create_table('stock_types',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stock_types')),
    sa.UniqueConstraint('name', name=op.f('uq_stock_types_name'))
    )
    op.create_index(op.f('ix_stock_types_id'), 'stock_types', ['id'], unique=False)
    op.create_table('suppliers',
    sa.Column('supplier_code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('contact_person', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('mobile', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('tax_number', sa.String(length=50), nullable=True),
    sa.Column('payment_terms', sa.String(length=100), nullable=True),
    sa.Column('credit_limit', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_suppliers')),
    sa.UniqueConstraint('supplier_code', name=op.f('uq_suppliers_supplier_code'))
    )
    op.create_index(op.f('ix_suppliers_id'), 'suppliers', ['id'], unique=False)
    op.create_table('system_settings',
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('setting_key', sa.String(length=100), nullable=False),
    sa.Column('setting_value', sa.Text(), nullable=True),
    sa.Column('data_type', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_encrypted', sa.Boolean(), nullable=True),
    sa.Column('is_system', sa.Boolean(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_system_settings')),
    sa.UniqueConstraint('setting_key', name=op.f('uq_system_settings_setting_key'))
    )
    op.create_index(op.f('ix_system_settings_id'), 'system_settings', ['id'], unique=False)
    op.create_table('vehicles',
    sa.Column('vehicle_number', sa.String(length=20), nullable=False),
    sa.Column('vehicle_type', sa.String(length=50), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('capacity_weight', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('capacity_volume', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('fuel_type', sa.String(length=20), nullable=True),
    sa.Column('registration_expiry', sa.Date(), nullable=True),
    sa.Column('insurance_expiry', sa.Date(), nullable=True),
    sa.Column('last_maintenance_date', sa.Date(), nullable=True),
    sa.Column('next_maintenance_date', sa.Date(), nullable=True),
    sa.Column('current_mileage', sa.Integer(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_vehicles')),
    sa.UniqueConstraint('vehicle_number', name=op.f('uq_vehicles_vehicle_number'))
    )
    op.create_index(op.f('ix_vehicles_id'), 'vehicles', ['id'], unique=False)
    op.create_table('whatsapp_logs',
    sa.Column('recipient_phone', sa.String(length=20), nullable=False),
    sa.Column('recipient_name', sa.String(length=100), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('message_type', sa.String(length=50), nullable=True),
    sa.Column('template_name', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delivered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('whatsapp_message_id', sa.String(length=100), nullable=True),
    sa.Column('reference_type', sa.String(length=50), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_whatsapp_logs'))
    )
    op.create_index(op.f('ix_whatsapp_logs_id'), 'whatsapp_logs', ['id'], unique=False)
    op.create_table('automation_logs',
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.Column('execution_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('trigger_data', sa.JSON(), nullable=True),
    sa.Column('action_results', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['rule_id'], ['automation_rules.id'], name=op.f('fk_automation_logs_rule_id_automation_rules')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_automation_logs'))
    )
    op.create_index(op.f('ix_automation_logs_id'), 'automation_logs', ['id'], unique=False)
    op.create_table('employees',
    sa.Column('employee_id', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('hire_date', sa.Date(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('position', sa.String(length=100), nullable=True),
    sa.Column('basic_salary', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('housing_allowance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('transport_allowance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('is_manager', sa.Boolean(), nullable=True),
    sa.Column('bio_id', sa.String(length=50), nullable=True),
    sa.Column('profile_image', sa.String(length=255), nullable=True),
    sa.Column('emergency_contact', sa.String(length=100), nullable=True),
    sa.Column('emergency_phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name=op.f('fk_employees_department_id_departments')),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('fk_employees_location_id_locations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_employees')),
    sa.UniqueConstraint('email', name=op.f('uq_employees_email'))
    )
    op.create_index(op.f('ix_employees_employee_id'), 'employees', ['employee_id'], unique=True)
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.create_table('inventory_counts',
    sa.Column('count_number', sa.String(length=50), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('count_date', sa.Date(), nullable=False),
    sa.Column('count_type', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('conducted_by', sa.Integer(), nullable=True),
    sa.Column('verified_by', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('fk_inventory_counts_location_id_locations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_inventory_counts')),
    sa.UniqueConstraint('count_number', name=op.f('uq_inventory_counts_count_number'))
    )
    op.create_index(op.f('ix_inventory_counts_id'), 'inventory_counts', ['id'], unique=False)
    op.create_table('items',
    sa.Column('item_code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('stock_type_id', sa.Integer(), nullable=True),
    sa.Column('unit_type', sa.Enum('PCS', 'KG', 'M2', 'M3', 'L', 'LM', name='unittype'), nullable=False),
    sa.Column('unit_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('selling_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('barcode', sa.String(length=100), nullable=True),
    sa.Column('qr_code', sa.String(length=255), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('is_perishable', sa.Boolean(), nullable=True),
    sa.Column('shelf_life_days', sa.Integer(), nullable=True),
    sa.Column('minimum_stock_level', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('maximum_stock_level', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('reorder_point', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_items_category_id_categories')),
    sa.ForeignKeyConstraint(['stock_type_id'], ['stock_types.id'], name=op.f('fk_items_stock_type_id_stock_types')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_items'))
    )
    op.create_index(op.f('ix_items_id'), 'items', ['id'], unique=False)
    op.create_index(op.f('ix_items_item_code'), 'items', ['item_code'], unique=True)
    op.create_table('purchase_orders',
    sa.Column('po_number', sa.String(length=50), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('order_date', sa.Date(), nullable=False),
    sa.Column('expected_delivery_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING', 'APPROVED', 'REJECTED', 'COMPLETED', 'CANCELLED', 'PARTIALLY_RECEIVED', name='purchaseorderstatus'), nullable=True),
    sa.Column('subtotal', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('tax_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('discount_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('requested_by', sa.Integer(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], name=op.f('fk_purchase_orders_supplier_id_suppliers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_purchase_orders')),
    sa.UniqueConstraint('po_number', name=op.f('uq_purchase_orders_po_number'))
    )
    op.create_index(op.f('ix_purchase_orders_id'), 'purchase_orders', ['id'], unique=False)
    op.create_table('reorder_requests',
    sa.Column('request_number', sa.String(length=50), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('request_date', sa.Date(), nullable=False),
    sa.Column('required_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'COMPLETED', name='reorderrequeststatus'), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('total_estimated_cost', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('requested_by', sa.Integer(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('fk_reorder_requests_location_id_locations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reorder_requests')),
    sa.UniqueConstraint('request_number', name=op.f('uq_reorder_requests_request_number'))
    )
    op.create_index(op.f('ix_reorder_requests_id'), 'reorder_requests', ['id'], unique=False)
    op.create_table('transfers',
    sa.Column('transfer_number', sa.String(length=50), nullable=False),
    sa.Column('from_location_id', sa.Integer(), nullable=False),
    sa.Column('to_location_id', sa.Integer(), nullable=False),
    sa.Column('transfer_date', sa.Date(), nullable=False),
    sa.Column('expected_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_TRANSIT', 'COMPLETED', 'CANCELLED', name='transferstatus'), nullable=True),
    sa.Column('requested_by', sa.Integer(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('sent_by', sa.Integer(), nullable=True),
    sa.Column('received_by', sa.Integer(), nullable=True),
    sa.Column('approved_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sent_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('received_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['from_location_id'], ['locations.id'], name=op.f('fk_transfers_from_location_id_locations')),
    sa.ForeignKeyConstraint(['to_location_id'], ['locations.id'], name=op.f('fk_transfers_to_location_id_locations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transfers')),
    sa.UniqueConstraint('transfer_number', name=op.f('uq_transfers_transfer_number'))
    )
    op.create_index(op.f('ix_transfers_id'), 'transfers', ['id'], unique=False)
    op.create_table('attendances',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('attendance_date', sa.Date(), nullable=False),
    sa.Column('check_in_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('check_out_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_hours', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('overtime_hours', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('late_minutes', sa.Integer(), nullable=True),
    sa.Column('early_leave_minutes', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PRESENT', 'ABSENT', 'LATE', 'LEFT_EARLY', 'CHECKED_IN', 'CHECKED_OUT', name='attendancestatus'), nullable=False),
    sa.Column('bio_check_in', sa.Boolean(), nullable=True),
    sa.Column('bio_check_out', sa.Boolean(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('is_holiday', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name=op.f('fk_attendances_employee_id_employees')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_attendances'))
    )
    op.create_index(op.f('ix_attendances_id'), 'attendances', ['id'], unique=False)
    op.create_table('drivers',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('license_number', sa.String(length=50), nullable=False),
    sa.Column('license_expiry', sa.Date(), nullable=True),
    sa.Column('license_type', sa.String(length=20), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('emergency_contact', sa.String(length=100), nullable=True),
    sa.Column('emergency_phone', sa.String(length=20), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name=op.f('fk_drivers_employee_id_employees')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_drivers')),
    sa.UniqueConstraint('license_number', name=op.f('uq_drivers_license_number'))
    )
    op.create_index(op.f('ix_drivers_id'), 'drivers', ['id'], unique=False)
    op.create_table('goods_receipts',
    sa.Column('receipt_number', sa.String(length=50), nullable=False),
    sa.Column('purchase_order_id', sa.Integer(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('receipt_date', sa.Date(), nullable=False),
    sa.Column('delivered_by', sa.String(length=100), nullable=True),
    sa.Column('received_by', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['purchase_order_id'], ['purchase_orders.id'], name=op.f('fk_goods_receipts_purchase_order_id_purchase_orders')),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], name=op.f('fk_goods_receipts_supplier_id_suppliers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_goods_receipts')),
    sa.UniqueConstraint('receipt_number', name=op.f('uq_goods_receipts_receipt_number'))
    )
    op.create_index(op.f('ix_goods_receipts_id'), 'goods_receipts', ['id'], unique=False)
    op.create_table('inventory_count_items',
    sa.Column('inventory_count_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('system_quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('counted_quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('variance_quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('variance_value', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('batch_number', sa.String(length=50), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['inventory_count_id'], ['inventory_counts.id'], name=op.f('fk_inventory_count_items_inventory_count_id_inventory_counts')),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_inventory_count_items_item_id_items')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_inventory_count_items'))
    )
    op.create_index(op.f('ix_inventory_count_items_id'), 'inventory_count_items', ['id'], unique=False)
    op.create_table('item_suppliers',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('supplier_item_code', sa.String(length=100), nullable=True),
    sa.Column('unit_cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('minimum_order_quantity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('lead_time_days', sa.Integer(), nullable=True),
    sa.Column('is_preferred', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_item_suppliers_item_id_items')),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], name=op.f('fk_item_suppliers_supplier_id_suppliers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_item_suppliers'))
    )
    op.create_index(op.f('ix_item_suppliers_id'), 'item_suppliers', ['id'], unique=False)
    op.create_table('purchase_order_items',
    sa.Column('purchase_order_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit_cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_cost', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('received_quantity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_purchase_order_items_item_id_items')),
    sa.ForeignKeyConstraint(['purchase_order_id'], ['purchase_orders.id'], name=op.f('fk_purchase_order_items_purchase_order_id_purchase_orders')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_purchase_order_items'))
    )
    op.create_index(op.f('ix_purchase_order_items_id'), 'purchase_order_items', ['id'], unique=False)
    op.create_table('reorder_request_items',
    sa.Column('reorder_request_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('current_stock', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('requested_quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('approved_quantity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('estimated_unit_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('estimated_total_cost', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('reason', sa.String(length=200), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_reorder_request_items_item_id_items')),
    sa.ForeignKeyConstraint(['reorder_request_id'], ['reorder_requests.id'], name=op.f('fk_reorder_request_items_reorder_request_id_reorder_requests')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reorder_request_items'))
    )
    op.create_index(op.f('ix_reorder_request_items_id'), 'reorder_request_items', ['id'], unique=False)
    op.create_table('salaries',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('salary_month', sa.Date(), nullable=False),
    sa.Column('basic_salary', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('housing_allowance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('transport_allowance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('overtime_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('bonus', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_deductions', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('late_deductions', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('absent_deductions', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('other_deductions', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('gross_salary', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('net_salary', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('working_days', sa.Integer(), nullable=True),
    sa.Column('present_days', sa.Integer(), nullable=True),
    sa.Column('absent_days', sa.Integer(), nullable=True),
    sa.Column('late_days', sa.Integer(), nullable=True),
    sa.Column('payment_status', sa.Enum('PAID', 'UNPAID', name='salarypaymentstatus'), nullable=True),
    sa.Column('payment_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('payment_reference', sa.String(length=100), nullable=True),
    sa.Column('generated_by', sa.Integer(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name=op.f('fk_salaries_employee_id_employees')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_salaries'))
    )
    op.create_index(op.f('ix_salaries_id'), 'salaries', ['id'], unique=False)
    op.create_table('stock_analytics',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('opening_stock', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('closing_stock', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_inbound', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_outbound', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_transfers_in', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_transfers_out', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_adjustments', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_waste', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('turnover_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('days_on_hand', sa.Integer(), nullable=True),
    sa.Column('stock_value', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_stock_analytics_item_id_items')),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('fk_stock_analytics_location_id_locations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stock_analytics'))
    )
    op.create_index(op.f('ix_stock_analytics_id'), 'stock_analytics', ['id'], unique=False)
    op.create_table('stock_levels',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('current_stock', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('reserved_stock', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('available_stock', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('par_level_min', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('par_level_max', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_stock_levels_item_id_items')),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('fk_stock_levels_location_id_locations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stock_levels'))
    )
    op.create_index(op.f('ix_stock_levels_id'), 'stock_levels', ['id'], unique=False)
    op.create_table('stock_movements',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('movement_type', sa.Enum('INBOUND', 'OUTBOUND', 'TRANSFER', 'WASTE', 'DAMAGE', 'EXPIRED', 'ADJUSTMENT', name='stockmovementtype'), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('reference_type', sa.String(length=50), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('batch_number', sa.String(length=50), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('performed_by', sa.Integer(), nullable=True),
    sa.Column('movement_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_stock_movements_item_id_items')),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('fk_stock_movements_location_id_locations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stock_movements'))
    )
    op.create_index(op.f('ix_stock_movements_id'), 'stock_movements', ['id'], unique=False)
    op.create_table('transfer_items',
    sa.Column('transfer_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('requested_quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('sent_quantity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('received_quantity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('unit_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('batch_number', sa.String(length=50), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_transfer_items_item_id_items')),
    sa.ForeignKeyConstraint(['transfer_id'], ['transfers.id'], name=op.f('fk_transfer_items_transfer_id_transfers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transfer_items'))
    )
    op.create_index(op.f('ix_transfer_items_id'), 'transfer_items', ['id'], unique=False)
    op.create_table('user_shifts',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('shift_type_id', sa.Integer(), nullable=False),
    sa.Column('effective_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name=op.f('fk_user_shifts_employee_id_employees')),
    sa.ForeignKeyConstraint(['shift_type_id'], ['shift_types.id'], name=op.f('fk_user_shifts_shift_type_id_shift_types')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_shifts'))
    )
    op.create_index(op.f('ix_user_shifts_id'), 'user_shifts', ['id'], unique=False)
    op.create_table('goods_receipt_items',
    sa.Column('goods_receipt_id', sa.Integer(), nullable=False),
    sa.Column('purchase_order_item_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('ordered_quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('received_quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit_cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('batch_number', sa.String(length=50), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['goods_receipt_id'], ['goods_receipts.id'], name=op.f('fk_goods_receipt_items_goods_receipt_id_goods_receipts')),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_goods_receipt_items_item_id_items')),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('fk_goods_receipt_items_location_id_locations')),
    sa.ForeignKeyConstraint(['purchase_order_item_id'], ['purchase_order_items.id'], name=op.f('fk_goods_receipt_items_purchase_order_item_id_purchase_order_items')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_goods_receipt_items'))
    )
    op.create_index(op.f('ix_goods_receipt_items_id'), 'goods_receipt_items', ['id'], unique=False)
    op.create_table('shipments',
    sa.Column('shipment_number', sa.String(length=50), nullable=False),
    sa.Column('from_location_id', sa.Integer(), nullable=False),
    sa.Column('to_location_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.Column('vehicle_id', sa.Integer(), nullable=True),
    sa.Column('reference_type', sa.String(length=50), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('shipment_date', sa.Date(), nullable=False),
    sa.Column('expected_delivery_date', sa.Date(), nullable=True),
    sa.Column('actual_delivery_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('READY_FOR_PICKUP', 'PICKED_UP', 'OUT_FOR_DELIVERY', 'IN_TRANSIT', 'DELIVERED', 'CANCELLED', name='shipmentstatus'), nullable=True),
    sa.Column('pickup_otp', sa.String(length=6), nullable=True),
    sa.Column('delivery_otp', sa.String(length=6), nullable=True),
    sa.Column('pickup_otp_verified', sa.Boolean(), nullable=True),
    sa.Column('delivery_otp_verified', sa.Boolean(), nullable=True),
    sa.Column('pickup_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delivery_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('distance_km', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('fuel_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_weight', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_volume', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('sender_signature', sa.String(length=255), nullable=True),
    sa.Column('receiver_signature', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], name=op.f('fk_shipments_driver_id_drivers')),
    sa.ForeignKeyConstraint(['from_location_id'], ['locations.id'], name=op.f('fk_shipments_from_location_id_locations')),
    sa.ForeignKeyConstraint(['to_location_id'], ['locations.id'], name=op.f('fk_shipments_to_location_id_locations')),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], name=op.f('fk_shipments_vehicle_id_vehicles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_shipments')),
    sa.UniqueConstraint('shipment_number', name=op.f('uq_shipments_shipment_number'))
    )
    op.create_index(op.f('ix_shipments_id'), 'shipments', ['id'], unique=False)
    op.create_table('shipment_items',
    sa.Column('shipment_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('delivered_quantity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('weight', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('volume', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('batch_number', sa.String(length=50), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('packaging_type', sa.String(length=50), nullable=True),
    sa.Column('special_handling', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_shipment_items_item_id_items')),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], name=op.f('fk_shipment_items_shipment_id_shipments')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_shipment_items'))
    )
    op.create_index(op.f('ix_shipment_items_id'), 'shipment_items', ['id'], unique=False)
    op.create_table('shipment_tracking',
    sa.Column('shipment_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('READY_FOR_PICKUP', 'PICKED_UP', 'OUT_FOR_DELIVERY', 'IN_TRANSIT', 'DELIVERED', 'CANCELLED', name='shipmentstatus'), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('latitude', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=11, scale=8), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], name=op.f('fk_shipment_tracking_shipment_id_shipments')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_shipment_tracking'))
    )
    op.create_index(op.f('ix_shipment_tracking_id'), 'shipment_tracking', ['id'], unique=False)
    op.add_column('audit_logs', sa.Column('endpoint', sa.String(length=200), nullable=True))
    op.add_column('audit_logs', sa.Column('request_id', sa.String(length=100), nullable=True))
    op.add_column('audit_logs', sa.Column('session_id', sa.String(length=100), nullable=True))
    op.drop_column('audit_logs', 'is_active')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('audit_logs', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_column('audit_logs', 'session_id')
    op.drop_column('audit_logs', 'request_id')
    op.drop_column('audit_logs', 'endpoint')
    op.drop_index(op.f('ix_shipment_tracking_id'), table_name='shipment_tracking')
    op.drop_table('shipment_tracking')
    op.drop_index(op.f('ix_shipment_items_id'), table_name='shipment_items')
    op.drop_table('shipment_items')
    op.drop_index(op.f('ix_shipments_id'), table_name='shipments')
    op.drop_table('shipments')
    op.drop_index(op.f('ix_goods_receipt_items_id'), table_name='goods_receipt_items')
    op.drop_table('goods_receipt_items')
    op.drop_index(op.f('ix_user_shifts_id'), table_name='user_shifts')
    op.drop_table('user_shifts')
    op.drop_index(op.f('ix_transfer_items_id'), table_name='transfer_items')
    op.drop_table('transfer_items')
    op.drop_index(op.f('ix_stock_movements_id'), table_name='stock_movements')
    op.drop_table('stock_movements')
    op.drop_index(op.f('ix_stock_levels_id'), table_name='stock_levels')
    op.drop_table('stock_levels')
    op.drop_index(op.f('ix_stock_analytics_id'), table_name='stock_analytics')
    op.drop_table('stock_analytics')
    op.drop_index(op.f('ix_salaries_id'), table_name='salaries')
    op.drop_table('salaries')
    op.drop_index(op.f('ix_reorder_request_items_id'), table_name='reorder_request_items')
    op.drop_table('reorder_request_items')
    op.drop_index(op.f('ix_purchase_order_items_id'), table_name='purchase_order_items')
    op.drop_table('purchase_order_items')
    op.drop_index(op.f('ix_item_suppliers_id'), table_name='item_suppliers')
    op.drop_table('item_suppliers')
    op.drop_index(op.f('ix_inventory_count_items_id'), table_name='inventory_count_items')
    op.drop_table('inventory_count_items')
    op.drop_index(op.f('ix_goods_receipts_id'), table_name='goods_receipts')
    op.drop_table('goods_receipts')
    op.drop_index(op.f('ix_drivers_id'), table_name='drivers')
    op.drop_table('drivers')
    op.drop_index(op.f('ix_attendances_id'), table_name='attendances')
    op.drop_table('attendances')
    op.drop_index(op.f('ix_transfers_id'), table_name='transfers')
    op.drop_table('transfers')
    op.drop_index(op.f('ix_reorder_requests_id'), table_name='reorder_requests')
    op.drop_table('reorder_requests')
    op.drop_index(op.f('ix_purchase_orders_id'), table_name='purchase_orders')
    op.drop_table('purchase_orders')
    op.drop_index(op.f('ix_items_item_code'), table_name='items')
    op.drop_index(op.f('ix_items_id'), table_name='items')
    op.drop_table('items')
    op.drop_index(op.f('ix_inventory_counts_id'), table_name='inventory_counts')
    op.drop_table('inventory_counts')
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.drop_index(op.f('ix_employees_employee_id'), table_name='employees')
    op.drop_table('employees')
    op.drop_index(op.f('ix_automation_logs_id'), table_name='automation_logs')
    op.drop_table('automation_logs')
    op.drop_index(op.f('ix_whatsapp_logs_id'), table_name='whatsapp_logs')
    op.drop_table('whatsapp_logs')
    op.drop_index(op.f('ix_vehicles_id'), table_name='vehicles')
    op.drop_table('vehicles')
    op.drop_index(op.f('ix_system_settings_id'), table_name='system_settings')
    op.drop_table('system_settings')
    op.drop_index(op.f('ix_suppliers_id'), table_name='suppliers')
    op.drop_table('suppliers')
    op.drop_index(op.f('ix_stock_types_id'), table_name='stock_types')
    op.drop_table('stock_types')
    op.drop_index(op.f('ix_shift_types_id'), table_name='shift_types')
    op.drop_table('shift_types')
    op.drop_index(op.f('ix_qr_codes_id'), table_name='qr_codes')
    op.drop_table('qr_codes')
    op.drop_index(op.f('ix_performance_metrics_id'), table_name='performance_metrics')
    op.drop_table('performance_metrics')
    op.drop_index(op.f('ix_notification_queue_id'), table_name='notification_queue')
    op.drop_table('notification_queue')
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_holidays_id'), table_name='holidays')
    op.drop_table('holidays')
    op.drop_index(op.f('ix_file_uploads_id'), table_name='file_uploads')
    op.drop_table('file_uploads')
    op.drop_index(op.f('ix_email_logs_id'), table_name='email_logs')
    op.drop_table('email_logs')
    op.drop_index(op.f('ix_departments_id'), table_name='departments')
    op.drop_table('departments')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    op.drop_index(op.f('ix_automation_rules_id'), table_name='automation_rules')
    op.drop_table('automation_rules')
    op.drop_index(op.f('ix_alerts_id'), table_name='alerts')
    op.drop_table('alerts')
    op.drop_index(op.f('ix_ai_interactions_id'), table_name='ai_interactions')
    op.drop_table('ai_interactions')
    # ### end Alembic commands ###
