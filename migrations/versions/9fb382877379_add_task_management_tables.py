"""add task management tables

Revision ID: 9fb382877379
Revises: 3a7c69b69d3c
Create Date: 2025-08-30 11:37:34.898366

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9fb382877379'
down_revision: Union[str, None] = '3a7c69b69d3c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_types',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('auto_assign_enabled', sa.Boolean(), nullable=True),
    sa.Column('auto_assign_rules', sa.JSON(), nullable=True),
    sa.Column('default_priority', sa.String(length=20), nullable=True),
    sa.Column('default_estimated_hours', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('sla_hours', sa.Integer(), nullable=True),
    sa.Column('requires_approval', sa.Boolean(), nullable=True),
    sa.Column('approval_roles', sa.JSON(), nullable=True),
    sa.Column('notification_settings', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_types')),
    sa.UniqueConstraint('name', name=op.f('uq_task_types_name'))
    )
    op.create_index(op.f('ix_task_types_id'), 'task_types', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('task_number', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('task_type_id', sa.Integer(), nullable=False),
    sa.Column('reference_type', sa.String(length=50), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('reference_data', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('assigned_to', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'ON_HOLD', 'COMPLETED', 'CANCELLED', 'OVERDUE', 'WAITING_APPROVAL', 'APPROVED', 'REJECTED', name='taskstatus'), nullable=True),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', 'CRITICAL', name='taskpriority'), nullable=True),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('estimated_hours', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('actual_hours', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('tags', sa.String(length=500), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('recurrence_pattern', sa.String(length=100), nullable=True),
    sa.Column('parent_task_id', sa.Integer(), nullable=True),
    sa.Column('auto_assigned', sa.Boolean(), nullable=True),
    sa.Column('escalation_level', sa.Integer(), nullable=True),
    sa.Column('escalated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], name=op.f('fk_tasks_assigned_to_users')),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_tasks_created_by_users')),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name=op.f('fk_tasks_department_id_departments')),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('fk_tasks_location_id_locations')),
    sa.ForeignKeyConstraint(['parent_task_id'], ['tasks.id'], name=op.f('fk_tasks_parent_task_id_tasks')),
    sa.ForeignKeyConstraint(['task_type_id'], ['task_types.id'], name=op.f('fk_tasks_task_type_id_task_types')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tasks'))
    )
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_index(op.f('ix_tasks_task_number'), 'tasks', ['task_number'], unique=True)
    op.create_table('task_assignments',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('assigned_to', sa.Integer(), nullable=False),
    sa.Column('assigned_by', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('unassigned_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], name=op.f('fk_task_assignments_assigned_by_users')),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], name=op.f('fk_task_assignments_assigned_to_users')),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_task_assignments_task_id_tasks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_assignments'))
    )
    op.create_index(op.f('ix_task_assignments_id'), 'task_assignments', ['id'], unique=False)
    op.create_table('task_attachments',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('uploaded_by', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Numeric(precision=12, scale=0), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_task_attachments_task_id_tasks')),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], name=op.f('fk_task_attachments_uploaded_by_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_attachments'))
    )
    op.create_index(op.f('ix_task_attachments_id'), 'task_attachments', ['id'], unique=False)
    op.create_table('task_comments',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=False),
    sa.Column('is_internal', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_task_comments_task_id_tasks')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_task_comments_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_comments'))
    )
    op.create_index(op.f('ix_task_comments_id'), 'task_comments', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_task_comments_id'), table_name='task_comments')
    op.drop_table('task_comments')
    op.drop_index(op.f('ix_task_attachments_id'), table_name='task_attachments')
    op.drop_table('task_attachments')
    op.drop_index(op.f('ix_task_assignments_id'), table_name='task_assignments')
    op.drop_table('task_assignments')
    op.drop_index(op.f('ix_tasks_task_number'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_task_types_id'), table_name='task_types')
    op.drop_table('task_types')
    # ### end Alembic commands ###
